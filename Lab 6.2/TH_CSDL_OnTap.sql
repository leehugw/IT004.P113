-- Nguyễn Lê Hưng
-- 23520567
-- IT003.P113.2 - Lab06

-- Link github: 

--ĐỀ 1
CREATE DATABASE NHASACH
USE NHASACH

CREATE TABLE TACGIA
(
	MATG CHAR(5) PRIMARY KEY,
	HOTEN VARCHAR(20),
	DIACHI VARCHAR(50),
	NGSINH SMALLDATETIME,
	SODT VARCHAR(15)
)

CREATE TABLE SACH
(
	MASACH CHAR(5) PRIMARY KEY,
	TENSACH CHAR(5),
	THELOAI VARCHAR(25)
)

CREATE TABLE TACGIA_SACH
(
	MATG CHAR(5) ,
	MASACH CHAR(5),
	PRIMARY KEY (MATG, MASACH)
)

CREATE TABLE PHATHANH
(
	MAPH CHAR(5) PRIMARY KEY,
	MASACH CHAR(5),
	NGAYPH SMALLDATETIME,
	SOLUONG INT,
	NHAXUATBAN VARCHAR(20)
)

ALTER TABLE TACGIA_SACH ADD
CONSTRAINT FK_TG_SACH FOREIGN KEY (MATG) REFERENCES TACGIA(MATG)
ALTER TABLE TACGIA_SACH ADD
CONSTRAINT FK_SACH_TG FOREIGN KEY (MASACH) REFERENCES SACH(MASACH)

ALTER TABLE PHATHANH ADD
CONSTRAINT FK_PT FOREIGN KEY (MASACH) REFERENCES SACH(MASACH)

SET DATEFORMAT DMY
--2. Hiện thực các ràng buộc toàn vẹn sau:
--2.1. Ngày phát hành sách phải lớn hơn ngày sinh của tác giả. (1.5 đ)
CREATE TRIGGER TRG_TG ON TACGIA 
FOR UPDATE
AS
BEGIN 
IF EXISTS(SELECT *
		FROM inserted I
		JOIN TACGIA_SACH TGS ON TGS.MATG=I.MATG
		JOIN PHATHANH PH ON PH.MASACH=TGS.MASACH
		WHERE PH.NGAYPH<=I.NGSINH)
		BEGIN 
		RAISERROR('lOI',16,1)
		END
ELSE 
BEGIN
PRINT('THANH CONG')
END
END

CREATE TRIGGER TRG_PH ON PHATHANH
FOR INSERT, UPDATE
AS
BEGIN
IF EXISTS(SELECT *
		FROM inserted I
		JOIN TACGIA_SACH TGS ON TGS.MASACH=I.MASACH
		JOIN TACGIA TG ON TG.MATG=TGS.MATG
		WHERE I.NGAYPH<=TG.NGSINH)
		BEGIN 
		RAISERROR('lOI',16,1)
		END
ELSE 
BEGIN
PRINT('THANH CONG')
END
END

--2.2. Sách thuộc thể loại “Giáo khoa” chỉ do nhà xuất bản “Giáo dục” phát hành. (1.5 đ)
CREATE TRIGGER TRG_THL ON SACH
FOR UPDATE
AS
BEGIN
IF EXISTS (SELECT *
		FROM inserted I
		JOIN PHATHANH PH ON I.MASACH=PH.MASACH
		WHERE I.THELOAI=N'Giáo khoa' and PH.NHAXUATBAN=N'Giáo dục')
		BEGIN
		PRINT('THANH CONG')
		END
ELSE
BEGIN
RAISERROR('LOI',16,1)
END
END;

CREATE TRIGGER TRG_PH_S ON PHATHANH
FOR INSERT, UPDATE
AS
BEGIN
IF EXISTS(SELECT *
		FROM inserted I
		JOIN SACH ON SACH.MASACH=I.MASACH
		WHERE SACH.THELOAI=N'Giáo khoa' and I.NHAXUATBAN=N'Giáo dục')
		BEGIN
		PRINT('THANH CONG')
		END
ELSE
BEGIN
RAISERROR('LOI',16,1)
END
END; 

--3. Viết các câu lệnh SQL thực hiện các câu truy vấn sau:
--3.1. Tìm tác giả (MaTG,HoTen,SoDT) của những quyển sách thuộc thể loại “Văn học” do nhà xuất bản Trẻ phát hành. (1.5 đ)
SELECT DISTINCT TG.MATG, HOTEN, SODT
FROM TACGIA TG
JOIN TACGIA_SACH TGS ON TG.MATG=TGS.MATG
JOIN SACH S ON S.MASACH=TGS.MASACH
JOIN PHATHANH PH ON PH.MASACH=S.MASACH
WHERE S.THELOAI=N'Văn học' and ph.NHAXUATBAN=N'Trẻ'
--3.2. Tìm nhà xuất bản phát hành nhiều thể loại sách nhất.(1.5 đ)
SELECT TOP 1 WITH TIES PH.NHAXUATBAN, COUNT(DISTINCT S.THELOAI) AS SOLUONGTHELOAISACH
FROM PHATHANH PH
JOIN SACH S ON PH.MAPH=S.MASACH
GROUP BY PH.NHAXUATBAN
ORDER BY SOLUONGTHELOAISACH DESC

--3.3. Trong mỗi nhà xuất bản, tìm tác giả (MaTG,HoTen) có số lần phát hành nhiều sách nhất. (1 đ)
SELECT PH.NHAXUATBAN, TG.MATG, TG.HOTEN, COUNT(PH.MAPH) AS SOLANPHATHANH
FROM PHATHANH PH
JOIN TACGIA_SACH TGS ON TGS.MASACH=PH.MASACH
JOIN TACGIA TG ON TGS.MATG=TG.MATG
GROUP BY PH.NHAXUATBAN, TG.MATG, TG.HOTEN
HAVING COUNT(PH.MAPH) = (SELECT MAX(SOLANPHATHANH)
						FROM (SELECT COUNT(PH.MAPH) AS SOLANPHATHANH
							FROM PHATHANH PH
							JOIN TACGIA_SACH TGS ON TGS.MASACH=PH.MASACH
							JOIN TACGIA TG ON TGS.MATG=TG.MATG
							GROUP BY PH.NHAXUATBAN, TG.MATG, TG.HOTEN)AS SOMETHING
);
							
--ĐỀ 2
CREATE DATABASE XUONGXE
USE XUONGXE

CREATE TABLE NHANVIEN
(
	MANV CHAR(5) PRIMARY KEY,
	HOTEN VARCHAR(20),
	NGAYVL SMALLDATETIME,
	HSLUONG NUMERIC(4,2),
	MAPHONG CHAR(5)
)

CREATE TABLE PHONGBAN
(
	MAPHONG CHAR(5) PRIMARY KEY,
	TENPHONG VARCHAR(25),
	TRUONGPHONG CHAR(5)
)

CREATE TABLE XE
(
	MAXE CHAR(5) PRIMARY KEY,
	LOAIXE VARCHAR(20),
	SOCHONGOI INT,
	NAMSX INT,
)
CREATE TABLE PHANCONG
(
	MAPC CHAR(5) PRIMARY KEY,
	MANV CHAR(5),
	MAXE CHAR(5),
	NGAYDI SMALLDATETIME,
	NGAYVE SMALLDATETIME,
	NOIDEN VARCHAR(25)
)
--SAU KHI INSERT
ALTER TABLE NHANVIEN ADD
CONSTRAINT FK_PB_NV FOREIGN KEY (MAPHONG) REFERENCES PHONGBAN(MAPHONG)

ALTER TABLE PHANCONG ADD
CONSTRAINT FK_PC_NV FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV)

ALTER TABLE PHANCONG ADD
CONSTRAINT FK_PC_XE FOREIGN KEY (MAXE) REFERENCES XE(MAXE)

ALTER TABLE PHONGBAN ADD
CONSTRAINT FK_NV_PB FOREIGN KEY (TRUONGPHONG) REFERENCES NHANVIEN(MANV)
SET DATEFORMAT DMY
--Năm sản xuất của xe loại Toyota phải từ năm 2006 trở về sau. 
ALTER TABLE XE ADD
CONSTRAINT CHK_NXS CHECK(LOAIXE=N'Toyota' AND YEAR(NAMSX)>=2006)

--Nhân viên thuộc phòng lái xe “Ngoại thành” chỉ được phân công lái xe loại Toyota.
CREATE TRIGGER TRG_PC_LX ON PHONGBAN
FOR UPDATE
AS
BEGIN
IF EXISTS(SELECT *
		FROM inserted I
		JOIN NHANVIEN NV ON I.MAPHONG=NV.MAPHONG
		JOIN PHANCONG PC ON PC.MANV=NV.MANV
		JOIN XE ON XE.MAXE=PC.MAXE
		WHERE I.TENPHONG=N'Ngoại thành' AND XE.LOAIXE='Toyota')
		BEGIN
		PRINT('THANHCONG')
		END
ELSE
BEGIN
RAISERROR('LOI',16,1)
END
END;


CREATE TRIGGER TRG_XE ON XE
FOR INSERT,UPDATE
AS 
BEGIN
IF EXISTS(SELECT*
		FROM inserted I
		JOIN PHANCONG PC ON I.MAXE=PC.MAXE
		JOIN NHANVIEN NV ON PC.MANV=NV.MANV
		JOIN PHONGBAN PB ON PB.MAPHONG=NV.MAPHONG
		WHERE PB.TENPHONG=N'Ngoại thành' AND I.LOAIXE='Toyota')
		BEGIN
		PRINT('THANHCONG')
		END
ELSE
BEGIN
RAISERROR('LOI',16,1)
END
END;

--Tìm nhân viên (MaNV,HoTen) thuộc phòng lái xe “Nội thành” được phân công lái loại xe Toyota có số chỗ ngồi là 4
SELECT NV.MANV,NV.HOTEN
FROM PHONGBAN PB
JOIN NHANVIEN NV ON PB.MAPHONG=NV.MAPHONG
JOIN PHANCONG PC ON PC.MANV=NV.MANV
JOIN XE ON XE.MAXE=PC.MAXE
WHERE PB.TENPHONG=N'Nội thành' AND XE.LOAIXE='Toyota'AND XE.SOCHONGOI=4

--Tìm nhân viên(MANV,HoTen) là trưởng phòng được phân công lái tất cả các loại xe. 
SELECT MANV,HOTEN 
FROM NHANVIEN NV
JOIN PHONGBAN PB ON NV.MANV=PB.TRUONGPHONG
WHERE NOT EXISTS(SELECT *
				FROM XE
				WHERE  NOT EXISTS(SELECT *
								FROM PHANCONG PC
								WHERE XE.MAXE=PC.MAXE AND NV.MANV=PC.MANV))

--Trong mỗi phòng ban,tìm nhân viên (MaNV,HoTen) được phân công lái ít nhất loại xe Toyota	
SELECT PB.TENPHONG,NV.MANV,NV.HOTEN,COUNT(PC.MANV)AS SOLANPHANCONG
FROM PHONGBAN PB
JOIN NHANVIEN NV ON PB.MAPHONG=NV.MAPHONG
JOIN PHANCONG PC ON NV.MANV=PC.MANV
JOIN XE ON XE.MAXE=PC.MAXE
GROUP BY PB.TENPHONG,NV.MANV,NV.HOTEN
HAVING COUNT(PC.MANV)=(SELECT MIN(SOLANPHANCONG)
						FROM (SELECT COUNT(PC.MANV) AS SOLANPHANCONG
							FROM NHANVIEN NV
							JOIN PHANCONG PC ON NV.MANV=PC.MANV
							JOIN XE ON XE.MAXE=PC.MAXE
							WHERE XE.LOAIXE='Toyota'
							GROUP BY NV.MANV,NV.HOTEN) AS STH);


--ĐỀ 3
CREATE DATABASE THUESACH
USE THUESACH

CREATE TABLE DOCGIA
(
	MADG CHAR(5) PRIMARY KEY,
	HOTEN VARCHAR(30),
	NGAYSINH SMALLDATETIME,
	DIACHI VARCHAR(30),
	SODT VARCHAR(15)
)

CREATE TABLE SACH
(
	MASACH CHAR(5) PRIMARY KEY,
	TENSACH VARCHAR(25),
	THELOAI VARCHAR(25),
	NHAXUATBAN VARCHAR(30)
)

CREATE TABLE PHIEUTHUE
(
	MAPT CHAR(5) PRIMARY KEY,
	MADG CHAR(5),
	NGAYTHUE SMALLDATETIME,
	NGAYTRA SMALLDATETIME,
	SOSACHTHUE INT
)

CREATE TABLE CHITIET_PT
(
	MAPT CHAR(5),
	MASACH CHAR(5),
	PRIMARY KEY(MAPT, MASACH)
)

ALTER TABLE CHITIET_PT 
ADD CONSTRAINT FK_CTPT_PT FOREIGN KEY (MAPT) REFERENCES PHIEUTHUE(MAPT)
ALTER TABLE CHITIET_PT 
ADD CONSTRAINT FK_CTPT_SACH FOREIGN KEY (MASACH) REFERENCES SACH(MASACH)
ALTER TABLE PHIEUTHUE
ADD CONSTRAINT FK_PT_DG FOREIGN KEY (MADG) REFERENCES DOCGIA(MADG)

SET DATEFORMAT DMY
--Mỗi lần thuê sách, độc giả không được thuê quá 10 ngày.
ALTER TABLE PHIEUTHUE
ADD CONSTRAINT CHK_THUE CHECK((DAY(NGAYTRA)-DAY(NGAYTHUE))<=10 AND MONTH(NGAYTRA)=MONTH(NGAYTHUE) AND YEAR(NGAYTHUE)=YEAR(NGAYTRA))

--Số sách thuê trong bảng phiếu thuê bằng tổng số lần thuê sách có trong bảng chi tiết phiếu thuê. 
CREATE TRIGGER TRG_TONG_PT ON CHITIET_PT
FOR INSERT, DELETE, UPDATE
AS
BEGIN
UPDATE PHIEUTHUE
SET SOSACHTHUE=(SELECT COUNT(CTPT.MAPT)
				FROM CHITIET_PT CTPT
				WHERE PHIEUTHUE.MAPT=CTPT.MAPT)
WHERE PHIEUTHUE.MAPT IN (SELECT  I.MAPT FROM inserted I
						UNION
						SELECT D.MAPT FROM deleted D)
END

--Tìm các độc giả (MaDG,HoTen) đã thuê sách thuộc thể loại “Tin học” trong năm 2007
SELECT DG.MADG,DG.HOTEN 
FROM DOCGIA DG
JOIN PHIEUTHUE PT ON DG.MADG=PT.MADG
JOIN CHITIET_PT CTPT ON PT.MAPT=CTPT.MAPT
JOIN SACH S ON S.MASACH=CTPT.MASACH
WHERE S.THELOAI=N'Tin học' AND YEAR(NGAYTHUE)=2007

--Tìm các độc giả (MaDG,HoTen) đã thuê nhiều thể loại sách nhất. 
SELECT TOP 1 WITH TIES DG.MADG,DG.HOTEN, COUNT(S.THELOAI) AS SOTHELOAI
FROM DOCGIA DG
JOIN PHIEUTHUE PT ON DG.MADG=PT.MADG
JOIN CHITIET_PT CTPT ON PT.MAPT=CTPT.MAPT
JOIN SACH S ON S.MASACH=CTPT.MASACH
GROUP BY DG.MADG,DG.HOTEN
ORDER BY COUNT(S.THELOAI) DESC

--Trong mỗi thể loại sách, cho biết tên sách được thuê nhiều nhất. 
SELECT S1.THELOAI, S1.TENSACH
FROM SACH S1
WHERE S1.TENSACH IN (SELECT TENSACH
					FROM (SELECT TOP 1 WITH TIES S.THELOAI, S.TENSACH,COUNT(S.TENSACH)AS SOLUONGTHUE
						FROM SACH S
						JOIN CHITIET_PT CTPT ON S.MASACH=CTPT.MASACH
						GROUP BY S.THELOAI, S.TENSACH
						ORDER BY COUNT(S.TENSACH) DESC)AS STH
					WHERE STH.THELOAI=S1.THELOAI )

--ĐỀ 4
CREATE DATABASE THUEDIA
USE THUEDIA

CREATE TABLE KHACHHANG
(
	MAKH CHAR(5) PRIMARY KEY,
	HOTEN VARCHAR(30),
	DIACHI VARCHAR(30),
	SODT VARCHAR(15),
	LOAIKH VARCHAR(10)
)

CREATE TABLE BANG_DIA
(
	MABD CHAR(5) PRIMARY KEY,
	TENBD VARCHAR(25),
	THELOAI VARCHAR(25)
)

CREATE TABLE PHIEUTHUE
(
	MAPT CHAR(5) PRIMARY KEY,
	MAKH CHAR(5),
	NGAYTHUE SMALLDATETIME,
	NGAYTRA SMALLDATETIME,
	SOLUONGTHUE INT
)

CREATE TABLE CHITIET_PM
(
	MAPT CHAR(5),
	MABD CHAR(5),
	PRIMARY KEY (MAPT,MABD)
)

ALTER TABLE PHIEUTHUE 
ADD CONSTRAINT FK_PT_KH FOREIGN KEY (MAKH) REFERENCES KHACHHANG(MAKH)

ALTER TABLE CHITIET_PM
ADD CONSTRAINT FK_CTPM_PT FOREIGN KEY (MAPT) REFERENCES PHIEUTHUE(MAPT)

ALTER TABLE CHITIET_PM
ADD CONSTRAINT FK_CTPM_BD FOREIGN KEY (MABD) REFERENCES BANG_DIA(MABD)

--Thể loại băng đĩa chỉ thuộc các thể loại sau “ca nhạc”, “phim hành động”, “phim tình cảm”, “phim hoạt hình”
ALTER TABLE BANG_DIA
ADD CONSTRAINT CK_THL CHECK(THELOAI IN(N'ca nhạc',N'phim hành động',N'phim tình cảm'))

--Chỉ những khách hàng thuộc loại VIP mới được thuê với số lượng băng đĩa trên 5.
CREATE TRIGGER TRG_LOAIVIP ON KHACHHANG
FOR UPDATE
AS 
BEGIN
IF EXISTS (SELECT*
		FROM inserted I
		JOIN PHIEUTHUE PT ON I.MAKH=PT.MAKH
		WHERE I.LOAIKH='VIP' AND PT.SOLUONGTHUE<=5)
		BEGIN
		RAISERROR('LOI',16,1)
		ROLLBACK TRANSACTION
		END;
ELSE
BEGIN
PRINT('THANH CONG')
END
END;

CREATE TRIGGER TRG_LOAIVIP_THUE ON PHIEUTHUE
FOR INSERT, UPDATE
AS
BEGIN
IF EXISTS(SELECT*
		FROM inserted I
		JOIN KHACHHANG KH ON I.MAKH=KH.MAKH
		WHERE KH.LOAIKH='VIP' AND I.SOLUONGTHUE<=5)
		BEGIN
		RAISERROR('LOI',16,1)
		ROLLBACK TRANSACTION
		END
ELSE
BEGIN
PRINT('THANH CONG')
END
END;

--Tìm các khách hàng (MaDG,HoTen) đã thuê băng đĩa thuộc thể loại phim “Tình cảm” có số lượng thuê lớn hơn 3
SELECT DISTINCT KH.MAKH,KH.HOTEN 
FROM KHACHHANG KH
JOIN PHIEUTHUE PT ON KH.MAKH=PT.MAKH
JOIN CHITIET_PM CTPM ON PT.MAPT=CTPM.MAPT
JOIN BANG_DIA BD ON BD.MABD=CTPM.MABD
WHERE BD.THELOAI=N'Tình cảm' AND PT.SOLUONGTHUE>3

--Tìm các khách hàng(MaDG,HoTen) thuộc loại VIP đã thuê nhiều băng đĩa nhất. 
SELECT TOP 1 WITH TIES KH.MAKH,HOTEN
FROM KHACHHANG KH
JOIN PHIEUTHUE PT ON PT.MAKH=KH.MAKH
ORDER BY PT.SOLUONGTHUE DESC

--Trong mỗi thể loại băng đĩa, cho biết tên khách hàng nào đã thuê nhiều băng đĩa nhất.
SELECT *
FROM (
    SELECT 
        BD.THELOAI,
        KH.HOTEN,
        COUNT(CT.MABD) AS SO_LUONG_THUE,
        RANK() OVER (PARTITION BY BD.THELOAI ORDER BY COUNT(CT.MABD) DESC) AS RANK
    FROM 
        KHACHHANG KH
    JOIN PHIEUTHUE PT ON KH.MAKH = PT.MAKH
    JOIN CHITIET_PM CT ON PT.MAPT = CT.MAPT
    JOIN BANG_DIA BD ON CT.MABD = BD.MABD
    GROUP BY 
        BD.THELOAI, KH.HOTEN
) AS RankedResults
WHERE RANK = 1;